.question data={question_id: "#{@question.id}", user_id: "#{current_user.id if user_signed_in?}"}

  h3 = @question.title

  .row
    .col-xs-1
      .vote
        = vote_up_link_to vote_up_question_path, @question
        span.vote_count = @question.vote_count
        = vote_down_link_to vote_down_question_path, @question

      .subscription
        - if can?(:destroy, @subscription)
          = link_to '', [@question, @subscription], method: :delete, remote: true, class: 'glyphicon glyphicon-star active'
        - else
          = link_to '', question_subscriptions_path(@question), method: :post, remote: true, class: 'glyphicon glyphicon-star'
        span = question.subscriptions.count

    .col-xs-11
      .question-body.clearfix
        = markdown @question.body
        ul
          - @question.attachments.each do |a|
            li = link_to a.file.identifier, a.file.url
        .tags
          = raw @question.tag_list.map { |tag| link_to tag, tag_path(tag), class: 'tag' }.join(' ')

      - if can?(:update, @question)
        .post-menu
          = link_to 'edit', '', class: 'show-edit-form'
          = link_to 'delete', @question, data: { confirm: 'Вы уверены' }, method: :delete

      .user-info
        span asked #{@question.created_at.to_fs(:my_short)}
        = link_to @question.user do
          = image_tag @question.user.avatar.small.url
        = link_to @question.user.full_name, @question.user
      .clearfix

      == render 'form' if can?(:update, @question)

      .comments
        == render @question.comments

      .new-comment
        - if can?(:create, Comment)
          = link_to 'add a comment', '', class: 'new-comment-link'

          = form_for [@question, Comment.new], remote: true do |f|
            .form-group
              = f.text_area :body, class: 'form-control'
            .buttons
              = f.submit 'Add', class: 'btn btn-primary'
              = link_to 'Close', '', class: 'btn btn-default close-form'
